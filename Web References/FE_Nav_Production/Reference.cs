//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MVC_API.FE_Nav_Production {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProductionAddOn_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn")]
    public partial class ProductionAddOn : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback get_IsSingleInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiptFromProductionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalCulateBOMItemStandardCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseProdOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProductionJournalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseProdOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOfflineProdOutputJnlOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostOutputJournalManualOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOutputJournaiFrmPicklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostOutputJournalNASOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPDTOffLineTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductionBOMCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrackingQtyInConsumptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestBatchCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductionOrderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEComDeliveryLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProductionOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback HidePostedMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProductionAddOn() {
            this.Url = global::MVC_API.Properties.Settings.Default.MVC_API_FE_Nav_Production_ProductionAddOn;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event get_IsSingleInstanceCompletedEventHandler get_IsSingleInstanceCompleted;
        
        /// <remarks/>
        public event ReceiptFromProductionCompletedEventHandler ReceiptFromProductionCompleted;
        
        /// <remarks/>
        public event CalCulateBOMItemStandardCostCompletedEventHandler CalCulateBOMItemStandardCostCompleted;
        
        /// <remarks/>
        public event ReleaseProdOrderCompletedEventHandler ReleaseProdOrderCompleted;
        
        /// <remarks/>
        public event CreateProductionJournalCompletedEventHandler CreateProductionJournalCompleted;
        
        /// <remarks/>
        public event CloseProdOrderCompletedEventHandler CloseProdOrderCompleted;
        
        /// <remarks/>
        public event CreateOfflineProdOutputJnlCompletedEventHandler CreateOfflineProdOutputJnlCompleted;
        
        /// <remarks/>
        public event PostOutputJournalManualCompletedEventHandler PostOutputJournalManualCompleted;
        
        /// <remarks/>
        public event CheckOutputJournaiFrmPicklistCompletedEventHandler CheckOutputJournaiFrmPicklistCompleted;
        
        /// <remarks/>
        public event PostOutputJournalNASCompletedEventHandler PostOutputJournalNASCompleted;
        
        /// <remarks/>
        public event GetPDTOffLineTimeCompletedEventHandler GetPDTOffLineTimeCompleted;
        
        /// <remarks/>
        public event UpdateProductionBOMCostCompletedEventHandler UpdateProductionBOMCostCompleted;
        
        /// <remarks/>
        public event GetTrackingQtyInConsumptionCompletedEventHandler GetTrackingQtyInConsumptionCompleted;
        
        /// <remarks/>
        public event GetLatestBatchCodeCompletedEventHandler GetLatestBatchCodeCompleted;
        
        /// <remarks/>
        public event UpdateProductionOrderLineCompletedEventHandler UpdateProductionOrderLineCompleted;
        
        /// <remarks/>
        public event CreateEComDeliveryLogCompletedEventHandler CreateEComDeliveryLogCompleted;
        
        /// <remarks/>
        public event CreateProductionOrderCompletedEventHandler CreateProductionOrderCompleted;
        
        /// <remarks/>
        public event HidePostedMessageCompletedEventHandler HidePostedMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:get_IsSingleInstance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="get_IsSingleInstance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool get_IsSingleInstance() {
            object[] results = this.Invoke("get_IsSingleInstance", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void get_IsSingleInstanceAsync() {
            this.get_IsSingleInstanceAsync(null);
        }
        
        /// <remarks/>
        public void get_IsSingleInstanceAsync(object userState) {
            if ((this.get_IsSingleInstanceOperationCompleted == null)) {
                this.get_IsSingleInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_IsSingleInstanceOperationCompleted);
            }
            this.InvokeAsync("get_IsSingleInstance", new object[0], this.get_IsSingleInstanceOperationCompleted, userState);
        }
        
        private void Onget_IsSingleInstanceOperationCompleted(object arg) {
            if ((this.get_IsSingleInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_IsSingleInstanceCompleted(this, new get_IsSingleInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:ReceiptFromProduction", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="ReceiptFromProduction_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReceiptFromProduction(string salesOrderNo, string itemCode, string batchCode, decimal qty) {
            this.Invoke("ReceiptFromProduction", new object[] {
                        salesOrderNo,
                        itemCode,
                        batchCode,
                        qty});
        }
        
        /// <remarks/>
        public void ReceiptFromProductionAsync(string salesOrderNo, string itemCode, string batchCode, decimal qty) {
            this.ReceiptFromProductionAsync(salesOrderNo, itemCode, batchCode, qty, null);
        }
        
        /// <remarks/>
        public void ReceiptFromProductionAsync(string salesOrderNo, string itemCode, string batchCode, decimal qty, object userState) {
            if ((this.ReceiptFromProductionOperationCompleted == null)) {
                this.ReceiptFromProductionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiptFromProductionOperationCompleted);
            }
            this.InvokeAsync("ReceiptFromProduction", new object[] {
                        salesOrderNo,
                        itemCode,
                        batchCode,
                        qty}, this.ReceiptFromProductionOperationCompleted, userState);
        }
        
        private void OnReceiptFromProductionOperationCompleted(object arg) {
            if ((this.ReceiptFromProductionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiptFromProductionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CalCulateBOMItemStandardC" +
            "ost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CalCulateBOMItemStandardCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal CalCulateBOMItemStandardCost(string itemCode) {
            object[] results = this.Invoke("CalCulateBOMItemStandardCost", new object[] {
                        itemCode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalCulateBOMItemStandardCostAsync(string itemCode) {
            this.CalCulateBOMItemStandardCostAsync(itemCode, null);
        }
        
        /// <remarks/>
        public void CalCulateBOMItemStandardCostAsync(string itemCode, object userState) {
            if ((this.CalCulateBOMItemStandardCostOperationCompleted == null)) {
                this.CalCulateBOMItemStandardCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalCulateBOMItemStandardCostOperationCompleted);
            }
            this.InvokeAsync("CalCulateBOMItemStandardCost", new object[] {
                        itemCode}, this.CalCulateBOMItemStandardCostOperationCompleted, userState);
        }
        
        private void OnCalCulateBOMItemStandardCostOperationCompleted(object arg) {
            if ((this.CalCulateBOMItemStandardCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalCulateBOMItemStandardCostCompleted(this, new CalCulateBOMItemStandardCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:ReleaseProdOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="ReleaseProdOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseProdOrder([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFilter) {
            this.Invoke("ReleaseProdOrder", new object[] {
                        dateFilter});
        }
        
        /// <remarks/>
        public void ReleaseProdOrderAsync(System.DateTime dateFilter) {
            this.ReleaseProdOrderAsync(dateFilter, null);
        }
        
        /// <remarks/>
        public void ReleaseProdOrderAsync(System.DateTime dateFilter, object userState) {
            if ((this.ReleaseProdOrderOperationCompleted == null)) {
                this.ReleaseProdOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseProdOrderOperationCompleted);
            }
            this.InvokeAsync("ReleaseProdOrder", new object[] {
                        dateFilter}, this.ReleaseProdOrderOperationCompleted, userState);
        }
        
        private void OnReleaseProdOrderOperationCompleted(object arg) {
            if ((this.ReleaseProdOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseProdOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CreateProductionJournal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CreateProductionJournal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateProductionJournal(string prodOrderNo, string itemCode, string batchCode, decimal qty) {
            object[] results = this.Invoke("CreateProductionJournal", new object[] {
                        prodOrderNo,
                        itemCode,
                        batchCode,
                        qty});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProductionJournalAsync(string prodOrderNo, string itemCode, string batchCode, decimal qty) {
            this.CreateProductionJournalAsync(prodOrderNo, itemCode, batchCode, qty, null);
        }
        
        /// <remarks/>
        public void CreateProductionJournalAsync(string prodOrderNo, string itemCode, string batchCode, decimal qty, object userState) {
            if ((this.CreateProductionJournalOperationCompleted == null)) {
                this.CreateProductionJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProductionJournalOperationCompleted);
            }
            this.InvokeAsync("CreateProductionJournal", new object[] {
                        prodOrderNo,
                        itemCode,
                        batchCode,
                        qty}, this.CreateProductionJournalOperationCompleted, userState);
        }
        
        private void OnCreateProductionJournalOperationCompleted(object arg) {
            if ((this.CreateProductionJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProductionJournalCompleted(this, new CreateProductionJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CloseProdOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CloseProdOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseProdOrder() {
            this.Invoke("CloseProdOrder", new object[0]);
        }
        
        /// <remarks/>
        public void CloseProdOrderAsync() {
            this.CloseProdOrderAsync(null);
        }
        
        /// <remarks/>
        public void CloseProdOrderAsync(object userState) {
            if ((this.CloseProdOrderOperationCompleted == null)) {
                this.CloseProdOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseProdOrderOperationCompleted);
            }
            this.InvokeAsync("CloseProdOrder", new object[0], this.CloseProdOrderOperationCompleted, userState);
        }
        
        private void OnCloseProdOrderOperationCompleted(object arg) {
            if ((this.CloseProdOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseProdOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CreateOfflineProdOutputJn" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CreateOfflineProdOutputJnl_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateOfflineProdOutputJnl(string salesOrderNo, string itemCode, string batchCode, decimal qty) {
            this.Invoke("CreateOfflineProdOutputJnl", new object[] {
                        salesOrderNo,
                        itemCode,
                        batchCode,
                        qty});
        }
        
        /// <remarks/>
        public void CreateOfflineProdOutputJnlAsync(string salesOrderNo, string itemCode, string batchCode, decimal qty) {
            this.CreateOfflineProdOutputJnlAsync(salesOrderNo, itemCode, batchCode, qty, null);
        }
        
        /// <remarks/>
        public void CreateOfflineProdOutputJnlAsync(string salesOrderNo, string itemCode, string batchCode, decimal qty, object userState) {
            if ((this.CreateOfflineProdOutputJnlOperationCompleted == null)) {
                this.CreateOfflineProdOutputJnlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOfflineProdOutputJnlOperationCompleted);
            }
            this.InvokeAsync("CreateOfflineProdOutputJnl", new object[] {
                        salesOrderNo,
                        itemCode,
                        batchCode,
                        qty}, this.CreateOfflineProdOutputJnlOperationCompleted, userState);
        }
        
        private void OnCreateOfflineProdOutputJnlOperationCompleted(object arg) {
            if ((this.CreateOfflineProdOutputJnlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOfflineProdOutputJnlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:PostOutputJournalManual", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="PostOutputJournalManual_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostOutputJournalManual() {
            this.Invoke("PostOutputJournalManual", new object[0]);
        }
        
        /// <remarks/>
        public void PostOutputJournalManualAsync() {
            this.PostOutputJournalManualAsync(null);
        }
        
        /// <remarks/>
        public void PostOutputJournalManualAsync(object userState) {
            if ((this.PostOutputJournalManualOperationCompleted == null)) {
                this.PostOutputJournalManualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostOutputJournalManualOperationCompleted);
            }
            this.InvokeAsync("PostOutputJournalManual", new object[0], this.PostOutputJournalManualOperationCompleted, userState);
        }
        
        private void OnPostOutputJournalManualOperationCompleted(object arg) {
            if ((this.PostOutputJournalManualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostOutputJournalManualCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CheckOutputJournaiFrmPick" +
            "list", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CheckOutputJournaiFrmPicklist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckOutputJournaiFrmPicklist() {
            this.Invoke("CheckOutputJournaiFrmPicklist", new object[0]);
        }
        
        /// <remarks/>
        public void CheckOutputJournaiFrmPicklistAsync() {
            this.CheckOutputJournaiFrmPicklistAsync(null);
        }
        
        /// <remarks/>
        public void CheckOutputJournaiFrmPicklistAsync(object userState) {
            if ((this.CheckOutputJournaiFrmPicklistOperationCompleted == null)) {
                this.CheckOutputJournaiFrmPicklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutputJournaiFrmPicklistOperationCompleted);
            }
            this.InvokeAsync("CheckOutputJournaiFrmPicklist", new object[0], this.CheckOutputJournaiFrmPicklistOperationCompleted, userState);
        }
        
        private void OnCheckOutputJournaiFrmPicklistOperationCompleted(object arg) {
            if ((this.CheckOutputJournaiFrmPicklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutputJournaiFrmPicklistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:PostOutputJournalNAS", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="PostOutputJournalNAS_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostOutputJournalNAS() {
            this.Invoke("PostOutputJournalNAS", new object[0]);
        }
        
        /// <remarks/>
        public void PostOutputJournalNASAsync() {
            this.PostOutputJournalNASAsync(null);
        }
        
        /// <remarks/>
        public void PostOutputJournalNASAsync(object userState) {
            if ((this.PostOutputJournalNASOperationCompleted == null)) {
                this.PostOutputJournalNASOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostOutputJournalNASOperationCompleted);
            }
            this.InvokeAsync("PostOutputJournalNAS", new object[0], this.PostOutputJournalNASOperationCompleted, userState);
        }
        
        private void OnPostOutputJournalNASOperationCompleted(object arg) {
            if ((this.PostOutputJournalNASCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostOutputJournalNASCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:GetPDTOffLineTime", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="GetPDTOffLineTime_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetPDTOffLineTime() {
            object[] results = this.Invoke("GetPDTOffLineTime", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPDTOffLineTimeAsync() {
            this.GetPDTOffLineTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetPDTOffLineTimeAsync(object userState) {
            if ((this.GetPDTOffLineTimeOperationCompleted == null)) {
                this.GetPDTOffLineTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDTOffLineTimeOperationCompleted);
            }
            this.InvokeAsync("GetPDTOffLineTime", new object[0], this.GetPDTOffLineTimeOperationCompleted, userState);
        }
        
        private void OnGetPDTOffLineTimeOperationCompleted(object arg) {
            if ((this.GetPDTOffLineTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDTOffLineTimeCompleted(this, new GetPDTOffLineTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:UpdateProductionBOMCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="UpdateProductionBOMCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductionBOMCost(string bOMNO, ref decimal bOMCost) {
            object[] results = this.Invoke("UpdateProductionBOMCost", new object[] {
                        bOMNO,
                        bOMCost});
            bOMCost = ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductionBOMCostAsync(string bOMNO, decimal bOMCost) {
            this.UpdateProductionBOMCostAsync(bOMNO, bOMCost, null);
        }
        
        /// <remarks/>
        public void UpdateProductionBOMCostAsync(string bOMNO, decimal bOMCost, object userState) {
            if ((this.UpdateProductionBOMCostOperationCompleted == null)) {
                this.UpdateProductionBOMCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductionBOMCostOperationCompleted);
            }
            this.InvokeAsync("UpdateProductionBOMCost", new object[] {
                        bOMNO,
                        bOMCost}, this.UpdateProductionBOMCostOperationCompleted, userState);
        }
        
        private void OnUpdateProductionBOMCostOperationCompleted(object arg) {
            if ((this.UpdateProductionBOMCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductionBOMCostCompleted(this, new UpdateProductionBOMCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:GetTrackingQtyInConsumpti" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="GetTrackingQtyInConsumption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetTrackingQtyInConsumption(string itemNo, string batchCode) {
            object[] results = this.Invoke("GetTrackingQtyInConsumption", new object[] {
                        itemNo,
                        batchCode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrackingQtyInConsumptionAsync(string itemNo, string batchCode) {
            this.GetTrackingQtyInConsumptionAsync(itemNo, batchCode, null);
        }
        
        /// <remarks/>
        public void GetTrackingQtyInConsumptionAsync(string itemNo, string batchCode, object userState) {
            if ((this.GetTrackingQtyInConsumptionOperationCompleted == null)) {
                this.GetTrackingQtyInConsumptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrackingQtyInConsumptionOperationCompleted);
            }
            this.InvokeAsync("GetTrackingQtyInConsumption", new object[] {
                        itemNo,
                        batchCode}, this.GetTrackingQtyInConsumptionOperationCompleted, userState);
        }
        
        private void OnGetTrackingQtyInConsumptionOperationCompleted(object arg) {
            if ((this.GetTrackingQtyInConsumptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrackingQtyInConsumptionCompleted(this, new GetTrackingQtyInConsumptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:GetLatestBatchCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="GetLatestBatchCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLatestBatchCode(string itemNo) {
            object[] results = this.Invoke("GetLatestBatchCode", new object[] {
                        itemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestBatchCodeAsync(string itemNo) {
            this.GetLatestBatchCodeAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void GetLatestBatchCodeAsync(string itemNo, object userState) {
            if ((this.GetLatestBatchCodeOperationCompleted == null)) {
                this.GetLatestBatchCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestBatchCodeOperationCompleted);
            }
            this.InvokeAsync("GetLatestBatchCode", new object[] {
                        itemNo}, this.GetLatestBatchCodeOperationCompleted, userState);
        }
        
        private void OnGetLatestBatchCodeOperationCompleted(object arg) {
            if ((this.GetLatestBatchCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestBatchCodeCompleted(this, new GetLatestBatchCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:UpdateProductionOrderLine" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="UpdateProductionOrderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProductionOrderLine(string salesOrderNo) {
            this.Invoke("UpdateProductionOrderLine", new object[] {
                        salesOrderNo});
        }
        
        /// <remarks/>
        public void UpdateProductionOrderLineAsync(string salesOrderNo) {
            this.UpdateProductionOrderLineAsync(salesOrderNo, null);
        }
        
        /// <remarks/>
        public void UpdateProductionOrderLineAsync(string salesOrderNo, object userState) {
            if ((this.UpdateProductionOrderLineOperationCompleted == null)) {
                this.UpdateProductionOrderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductionOrderLineOperationCompleted);
            }
            this.InvokeAsync("UpdateProductionOrderLine", new object[] {
                        salesOrderNo}, this.UpdateProductionOrderLineOperationCompleted, userState);
        }
        
        private void OnUpdateProductionOrderLineOperationCompleted(object arg) {
            if ((this.UpdateProductionOrderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductionOrderLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CreateEComDeliveryLog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CreateEComDeliveryLog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateEComDeliveryLog(string salesInvNo) {
            this.Invoke("CreateEComDeliveryLog", new object[] {
                        salesInvNo});
        }
        
        /// <remarks/>
        public void CreateEComDeliveryLogAsync(string salesInvNo) {
            this.CreateEComDeliveryLogAsync(salesInvNo, null);
        }
        
        /// <remarks/>
        public void CreateEComDeliveryLogAsync(string salesInvNo, object userState) {
            if ((this.CreateEComDeliveryLogOperationCompleted == null)) {
                this.CreateEComDeliveryLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEComDeliveryLogOperationCompleted);
            }
            this.InvokeAsync("CreateEComDeliveryLog", new object[] {
                        salesInvNo}, this.CreateEComDeliveryLogOperationCompleted, userState);
        }
        
        private void OnCreateEComDeliveryLogOperationCompleted(object arg) {
            if ((this.CreateEComDeliveryLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEComDeliveryLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:CreateProductionOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="CreateProductionOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateProductionOrder(int newStatus, string itemNo, decimal quantity, string assemblyOrderNo, int assemblyOrderLineNo, bool tempOrder, ref string prodOrderNo) {
            object[] results = this.Invoke("CreateProductionOrder", new object[] {
                        newStatus,
                        itemNo,
                        quantity,
                        assemblyOrderNo,
                        assemblyOrderLineNo,
                        tempOrder,
                        prodOrderNo});
            prodOrderNo = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProductionOrderAsync(int newStatus, string itemNo, decimal quantity, string assemblyOrderNo, int assemblyOrderLineNo, bool tempOrder, string prodOrderNo) {
            this.CreateProductionOrderAsync(newStatus, itemNo, quantity, assemblyOrderNo, assemblyOrderLineNo, tempOrder, prodOrderNo, null);
        }
        
        /// <remarks/>
        public void CreateProductionOrderAsync(int newStatus, string itemNo, decimal quantity, string assemblyOrderNo, int assemblyOrderLineNo, bool tempOrder, string prodOrderNo, object userState) {
            if ((this.CreateProductionOrderOperationCompleted == null)) {
                this.CreateProductionOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProductionOrderOperationCompleted);
            }
            this.InvokeAsync("CreateProductionOrder", new object[] {
                        newStatus,
                        itemNo,
                        quantity,
                        assemblyOrderNo,
                        assemblyOrderLineNo,
                        tempOrder,
                        prodOrderNo}, this.CreateProductionOrderOperationCompleted, userState);
        }
        
        private void OnCreateProductionOrderOperationCompleted(object arg) {
            if ((this.CreateProductionOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProductionOrderCompleted(this, new CreateProductionOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn:HidePostedMessage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", ResponseElementName="HidePostedMessage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ProductionAddOn", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HidePostedMessage(bool hidePostedMsg) {
            this.Invoke("HidePostedMessage", new object[] {
                        hidePostedMsg});
        }
        
        /// <remarks/>
        public void HidePostedMessageAsync(bool hidePostedMsg) {
            this.HidePostedMessageAsync(hidePostedMsg, null);
        }
        
        /// <remarks/>
        public void HidePostedMessageAsync(bool hidePostedMsg, object userState) {
            if ((this.HidePostedMessageOperationCompleted == null)) {
                this.HidePostedMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHidePostedMessageOperationCompleted);
            }
            this.InvokeAsync("HidePostedMessage", new object[] {
                        hidePostedMsg}, this.HidePostedMessageOperationCompleted, userState);
        }
        
        private void OnHidePostedMessageOperationCompleted(object arg) {
            if ((this.HidePostedMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HidePostedMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void get_IsSingleInstanceCompletedEventHandler(object sender, get_IsSingleInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_IsSingleInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_IsSingleInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReceiptFromProductionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalCulateBOMItemStandardCostCompletedEventHandler(object sender, CalCulateBOMItemStandardCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalCulateBOMItemStandardCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalCulateBOMItemStandardCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReleaseProdOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateProductionJournalCompletedEventHandler(object sender, CreateProductionJournalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProductionJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProductionJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseProdOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateOfflineProdOutputJnlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostOutputJournalManualCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckOutputJournaiFrmPicklistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostOutputJournalNASCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPDTOffLineTimeCompletedEventHandler(object sender, GetPDTOffLineTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDTOffLineTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDTOffLineTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateProductionBOMCostCompletedEventHandler(object sender, UpdateProductionBOMCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductionBOMCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductionBOMCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal bOMCost {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTrackingQtyInConsumptionCompletedEventHandler(object sender, GetTrackingQtyInConsumptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrackingQtyInConsumptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrackingQtyInConsumptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLatestBatchCodeCompletedEventHandler(object sender, GetLatestBatchCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestBatchCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestBatchCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateProductionOrderLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateEComDeliveryLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateProductionOrderCompletedEventHandler(object sender, CreateProductionOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProductionOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProductionOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string prodOrderNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HidePostedMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591